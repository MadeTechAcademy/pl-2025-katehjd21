Q3. How does this differ from approaches you've used before? What's the impact of changing our mind? and the benefits?

I have been very lucky to have had prior exposure to pipelines, both during the apprenticeship project at the end of our
bootcamp and in my current delivery. This has allowed me to see firsthand how useful and beneficial they are in real life.
However, before learning about pipelines, I would run tests manually before deployment, deploy and host applications
manually, and complete any other necessary checks manually (if I remembered!). This approach was time-consuming, 
error-prone, and extremely inconsistent across environments.

Since using pipelines, I have noticed that the process is automated, repeatable, and consistent, whereas the old
manual approach was unreliable and prone to human error, so can definitely see why pipelines are used despite them 
taking slightly longer to set up.

IMPACT OF CHANGING OUR MIND
I am not sure what context this is meant to be in so I will answer both way that I think I could go about this question.

If we need to change or update the deployment process, such as adding a new step, it is much easier to update the
pipeline so that all deployments consistently follow the new process. By contrast, making the same change manually
would require repetitive effort, consume additional time and resources, and could be forgotten or applied inconsistently.

Adopting the new approach of pipelines and automation requires an initial setup and learning effort, but the long-term
impact it has is significant as deployments become faster, safer, and more reliable.

BENEFITS OF THE NEW APPROACH OF USING PIPELINES
- Saves time and reduces repetitive manual work/tasks.
- Reduces errors and failed deployments
- Ensures testing and validation run automatically
- Provides consistency across environments
- Improves confidence in the quality of our code and behaviour of our app. 